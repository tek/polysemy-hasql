cabal-version: 2.2

-- This file has been generated from package.yaml by hpack version 0.34.2.
--
-- see: https://github.com/sol/hpack

name:           polysemy-hasql
version:        0.1.0.0
synopsis:       Polysemy effects for Hasql
description:    Please see the README on Github at <https://github.com/tek/polysemy-db>
category:       Database
author:         Torsten Schmits
maintainer:     tek@tryp.io
copyright:      2020 Torsten Schmits
license:        BSD-2-Clause-Patent
license-file:   LICENSE
build-type:     Simple
extra-source-files:
    README.md
    Changelog.md

library
  exposed-modules:
      Polysemy.Db.Accounts
      Polysemy.Db.Collect
      Polysemy.Db.ColumnParams
      Polysemy.Db.Data.Database
      Polysemy.Db.Data.DbConnection
      Polysemy.Db.Data.QueryTable
      Polysemy.Db.Data.QueryWhere
      Polysemy.Db.Data.Schema
      Polysemy.Db.Data.SqlCode
      Polysemy.Db.Data.StoreTable
      Polysemy.Db.Data.Table
      Polysemy.Db.Database
      Polysemy.Db.DbConnection
      Polysemy.Db.Query.Many
      Polysemy.Db.Query.One
      Polysemy.Db.Schema.Generic
      Polysemy.Db.Session
      Polysemy.Db.SOP.Enum
      Polysemy.Db.Statement
      Polysemy.Db.Store
      Polysemy.Db.Store.Statement
      Polysemy.Db.Table
      Polysemy.Db.Table.Columns
      Polysemy.Db.Table.ColumnType
      Polysemy.Db.Table.Enum
      Polysemy.Db.Table.Identifier
      Polysemy.Db.Table.Query.Delete
      Polysemy.Db.Table.Query.Fragment
      Polysemy.Db.Table.Query.Insert
      Polysemy.Db.Table.Query.Select
      Polysemy.Db.Table.Query.Set
      Polysemy.Db.Table.Query.Text
      Polysemy.Db.Table.Query.Where
      Polysemy.Db.Table.QueryFields
      Polysemy.Db.Table.QueryParams
      Polysemy.Db.Table.QueryRow
      Polysemy.Db.Table.QueryTable
      Polysemy.Db.Table.ResultShape
      Polysemy.Db.Table.Row
      Polysemy.Db.Table.Table
      Polysemy.Db.Table.TableName
      Polysemy.Db.Table.TableStructure
      Polysemy.Db.Table.ValueDecoder
      Polysemy.Db.Table.ValueEncoder
      Polysemy.Db.Test.Database
      Paths_polysemy_hasql
  autogen-modules:
      Paths_polysemy_hasql
  hs-source-dirs:
      lib
  default-extensions: AllowAmbiguousTypes ApplicativeDo BangPatterns BinaryLiterals BlockArguments ConstraintKinds DataKinds DefaultSignatures DeriveAnyClass DeriveDataTypeable DeriveFoldable DeriveFunctor DeriveGeneric DeriveTraversable DerivingStrategies DisambiguateRecordFields DoAndIfThenElse DuplicateRecordFields EmptyDataDecls ExistentialQuantification FlexibleContexts FlexibleInstances FunctionalDependencies GADTs GeneralizedNewtypeDeriving InstanceSigs KindSignatures LambdaCase LiberalTypeSynonyms MultiParamTypeClasses MultiWayIf NamedFieldPuns OverloadedStrings OverloadedLists PackageImports PartialTypeSignatures PatternGuards PatternSynonyms PolyKinds QuantifiedConstraints QuasiQuotes RankNTypes RecordWildCards RecursiveDo ScopedTypeVariables StandaloneDeriving TemplateHaskell TupleSections TypeApplications TypeFamilies TypeFamilyDependencies TypeOperators TypeSynonymInstances UndecidableInstances UnicodeSyntax ViewPatterns
  ghc-options: -O2 -Wall -Werror -flate-specialise -fspecialise-aggressively
  build-depends:
      aeson
    , base-noprelude
    , bytestring
    , chronos
    , comonad
    , composition
    , composition-extra
    , composition-prelude
    , containers
    , data-default
    , either
    , generics-sop
    , ghc-prim
    , hasql
    , hedgehog
    , lens
    , path
    , polysemy
    , polysemy-db
    , relude
    , scientific
    , sop-core
    , tasty
    , tasty-hedgehog
    , text
    , time
    , type-errors
    , type-errors-pretty
    , uuid
    , vector
  mixins:
      polysemy-db hiding (Polysemy.Db.Prelude)
    , polysemy-db (Polysemy.Db.Prelude as Prelude)
  if !arch(arm) && !arch(aarch64)
    ghc-options: -fplugin=Polysemy.Plugin
    build-depends:
        polysemy-plugin
  default-language: Haskell2010

test-suite polysemy-hasql-integration
  type: exitcode-stdio-1.0
  main-is: Main.hs
  other-modules:
      ArrayTest
      InitTest
      SingletonTest
      Paths_polysemy_hasql
  hs-source-dirs:
      integration
  default-extensions: AllowAmbiguousTypes ApplicativeDo BangPatterns BinaryLiterals BlockArguments ConstraintKinds DataKinds DefaultSignatures DeriveAnyClass DeriveDataTypeable DeriveFoldable DeriveFunctor DeriveGeneric DeriveTraversable DerivingStrategies DisambiguateRecordFields DoAndIfThenElse DuplicateRecordFields EmptyDataDecls ExistentialQuantification FlexibleContexts FlexibleInstances FunctionalDependencies GADTs GeneralizedNewtypeDeriving InstanceSigs KindSignatures LambdaCase LiberalTypeSynonyms MultiParamTypeClasses MultiWayIf NamedFieldPuns OverloadedStrings OverloadedLists PackageImports PartialTypeSignatures PatternGuards PatternSynonyms PolyKinds QuantifiedConstraints QuasiQuotes RankNTypes RecordWildCards RecursiveDo ScopedTypeVariables StandaloneDeriving TemplateHaskell TupleSections TypeApplications TypeFamilies TypeFamilyDependencies TypeOperators TypeSynonymInstances UndecidableInstances UnicodeSyntax ViewPatterns
  ghc-options: -O2 -Wall -Werror -flate-specialise -fspecialise-aggressively -threaded -rtsopts -with-rtsopts=-N
  build-depends:
      aeson
    , base-noprelude
    , bytestring
    , chronos
    , comonad
    , composition
    , composition-extra
    , composition-prelude
    , containers
    , data-default
    , either
    , generics-sop
    , ghc-prim
    , hasql
    , hedgehog
    , lens
    , path
    , polysemy
    , polysemy-db
    , polysemy-hasql
    , relude
    , scientific
    , sop-core
    , tasty
    , tasty-hedgehog
    , text
    , time
    , type-errors
    , type-errors-pretty
    , uuid
    , vector
  mixins:
      polysemy-db hiding (Polysemy.Db.Prelude)
    , polysemy-db (Polysemy.Db.Prelude as Prelude)
  if !arch(arm) && !arch(aarch64)
    ghc-options: -fplugin=Polysemy.Plugin
    build-depends:
        polysemy-plugin
  default-language: Haskell2010

test-suite polysemy-hasql-unit
  type: exitcode-stdio-1.0
  main-is: Main.hs
  other-modules:
      EnumTest
      Q1
      StatementTest
      TableTest
      Paths_polysemy_hasql
  hs-source-dirs:
      test
  default-extensions: AllowAmbiguousTypes ApplicativeDo BangPatterns BinaryLiterals BlockArguments ConstraintKinds DataKinds DefaultSignatures DeriveAnyClass DeriveDataTypeable DeriveFoldable DeriveFunctor DeriveGeneric DeriveTraversable DerivingStrategies DisambiguateRecordFields DoAndIfThenElse DuplicateRecordFields EmptyDataDecls ExistentialQuantification FlexibleContexts FlexibleInstances FunctionalDependencies GADTs GeneralizedNewtypeDeriving InstanceSigs KindSignatures LambdaCase LiberalTypeSynonyms MultiParamTypeClasses MultiWayIf NamedFieldPuns OverloadedStrings OverloadedLists PackageImports PartialTypeSignatures PatternGuards PatternSynonyms PolyKinds QuantifiedConstraints QuasiQuotes RankNTypes RecordWildCards RecursiveDo ScopedTypeVariables StandaloneDeriving TemplateHaskell TupleSections TypeApplications TypeFamilies TypeFamilyDependencies TypeOperators TypeSynonymInstances UndecidableInstances UnicodeSyntax ViewPatterns
  ghc-options: -O2 -Wall -Werror -flate-specialise -fspecialise-aggressively -threaded -rtsopts -with-rtsopts=-N
  build-depends:
      aeson
    , base-noprelude
    , bytestring
    , chronos
    , comonad
    , composition
    , composition-extra
    , composition-prelude
    , containers
    , data-default
    , either
    , generics-sop
    , ghc-prim
    , hasql
    , hedgehog
    , lens
    , path
    , polysemy
    , polysemy-db
    , polysemy-hasql
    , relude
    , scientific
    , sop-core
    , streaming
    , tasty
    , tasty-hedgehog
    , text
    , time
    , type-errors
    , type-errors-pretty
    , uuid
    , vector
  mixins:
      polysemy-db hiding (Polysemy.Db.Prelude)
    , polysemy-db (Polysemy.Db.Prelude as Prelude)
  if !arch(arm) && !arch(aarch64)
    ghc-options: -fplugin=Polysemy.Plugin
    build-depends:
        polysemy-plugin
  default-language: Haskell2010
