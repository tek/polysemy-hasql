cabal-version: 2.2

-- This file has been generated from package.yaml by hpack version 0.34.2.
--
-- see: https://github.com/sol/hpack

name:           polysemy-hasql
version:        0.1.0.0
synopsis:       Polysemy effects for Hasql
description:    Please see the README on Github at <https://github.com/tek/polysemy-hasql>
category:       Database
homepage:       https://github.com/tek/polysemy-hasql#readme
bug-reports:    https://github.com/tek/polysemy-hasql/issues
author:         Torsten Schmits
maintainer:     tek@tryp.io
copyright:      2020 Torsten Schmits
license:        BSD-2-Clause-Patent
license-file:   LICENSE
build-type:     Simple
extra-source-files:
    README.md
    Changelog.md

source-repository head
  type: git
  location: https://github.com/tek/polysemy-hasql

library
  exposed-modules:
      Polysemy.Hasql
      Polysemy.Hasql.Column.Class
      Polysemy.Hasql.Column.Data.Effect
      Polysemy.Hasql.Column.DataColumn
      Polysemy.Hasql.Column.Effect
      Polysemy.Hasql.Column.Meta
      Polysemy.Hasql.ColumnOptions
      Polysemy.Hasql.ColumnType
      Polysemy.Hasql.Data.Database
      Polysemy.Hasql.Data.DbConnection
      Polysemy.Hasql.Data.DbType
      Polysemy.Hasql.Data.ExistingColumn
      Polysemy.Hasql.Data.ManagedTable
      Polysemy.Hasql.Data.QueryTable
      Polysemy.Hasql.Data.QueueOutputError
      Polysemy.Hasql.Data.Schema
      Polysemy.Hasql.Data.SqlCode
      Polysemy.Hasql.Data.StoreTable
      Polysemy.Hasql.Data.Table
      Polysemy.Hasql.Data.Where
      Polysemy.Hasql.Database
      Polysemy.Hasql.DbConnection
      Polysemy.Hasql.DbType
      Polysemy.Hasql.Kind.Data.DbType
      Polysemy.Hasql.ManagedTable
      Polysemy.Hasql.Query.Many
      Polysemy.Hasql.Query.One
      Polysemy.Hasql.QueryParams
      Polysemy.Hasql.QueryRows
      Polysemy.Hasql.Queue
      Polysemy.Hasql.Queue.Data.Queue
      Polysemy.Hasql.Queue.Data.Queued
      Polysemy.Hasql.Queue.Input
      Polysemy.Hasql.Queue.Output
      Polysemy.Hasql.Schema.Generic
      Polysemy.Hasql.Session
      Polysemy.Hasql.SOP.Enum
      Polysemy.Hasql.Statement
      Polysemy.Hasql.Store
      Polysemy.Hasql.Store.Statement
      Polysemy.Hasql.Table
      Polysemy.Hasql.Table.ColumnOptions
      Polysemy.Hasql.Table.DecoderValue
      Polysemy.Hasql.Table.EncoderValue
      Polysemy.Hasql.Table.Enum
      Polysemy.Hasql.Table.PrimDecoder
      Polysemy.Hasql.Table.PrimEncoder
      Polysemy.Hasql.Table.Query.Delete
      Polysemy.Hasql.Table.Query.Fragment
      Polysemy.Hasql.Table.Query.Insert
      Polysemy.Hasql.Table.Query.Prepared
      Polysemy.Hasql.Table.Query.Select
      Polysemy.Hasql.Table.Query.Set
      Polysemy.Hasql.Table.Query.Text
      Polysemy.Hasql.Table.QueryParam
      Polysemy.Hasql.Table.QueryRow
      Polysemy.Hasql.Table.QueryTable
      Polysemy.Hasql.Table.ReadNull
      Polysemy.Hasql.Table.ResultShape
      Polysemy.Hasql.Table.Table
      Polysemy.Hasql.Table.WriteNull
      Polysemy.Hasql.Test.Database
      Polysemy.Hasql.Test.Error.Column.E1
      Polysemy.Hasql.Type.Data.DbType
      Polysemy.Hasql.Where
      Paths_polysemy_hasql
  autogen-modules:
      Paths_polysemy_hasql
  hs-source-dirs:
      lib
  default-extensions: AllowAmbiguousTypes ApplicativeDo BangPatterns BinaryLiterals BlockArguments ConstraintKinds DataKinds DefaultSignatures DeriveAnyClass DeriveDataTypeable DeriveFoldable DeriveFunctor DeriveGeneric DeriveTraversable DerivingStrategies DisambiguateRecordFields DoAndIfThenElse DuplicateRecordFields EmptyDataDecls ExistentialQuantification FlexibleContexts FlexibleInstances FunctionalDependencies GADTs GeneralizedNewtypeDeriving InstanceSigs KindSignatures LambdaCase LiberalTypeSynonyms MultiParamTypeClasses MultiWayIf NamedFieldPuns OverloadedStrings OverloadedLists PackageImports PartialTypeSignatures PatternGuards PatternSynonyms PolyKinds QuantifiedConstraints QuasiQuotes RankNTypes RecordWildCards RecursiveDo ScopedTypeVariables StandaloneDeriving TemplateHaskell TupleSections TypeApplications TypeFamilies TypeFamilyDependencies TypeOperators TypeSynonymInstances UndecidableInstances UnicodeSyntax ViewPatterns
  ghc-options: -Wall -Wredundant-constraints -Wsimplifiable-class-constraints -fplugin=Polysemy.Plugin -O2 -flate-specialise -fspecialise-aggressively
  build-depends:
      aeson
    , async
    , base
    , chronos
    , containers
    , contravariant
    , fcf-containers
    , first-class-families
    , generics-sop
    , ghc-prim
    , hasql >=1.4.3 && <1.5
    , lens
    , path
    , polysemy
    , polysemy-db
    , polysemy-db-data
    , polysemy-plugin
    , polysemy-resume
    , polysemy-time
    , postgresql-libpq
    , scientific
    , stm-chans
    , symbols
    , text
    , time
    , type-errors
    , type-errors-pretty
    , uuid
    , vector
  mixins:
      base hiding (Prelude)
    , polysemy-db hiding (Polysemy.Db.Prelude)
    , polysemy-db (Polysemy.Db.Prelude as Prelude)
  default-language: Haskell2010

test-suite polysemy-hasql-integration
  type: exitcode-stdio-1.0
  main-is: Main.hs
  other-modules:
      Polysemy.Hasql.Test.ArrayTest
      Polysemy.Hasql.Test.DbConfig
      Polysemy.Hasql.Test.InitTest
      Polysemy.Hasql.Test.JsonTest
      Polysemy.Hasql.Test.PKTest
      Polysemy.Hasql.Test.QueryTest
      Polysemy.Hasql.Test.QueueTest
      Polysemy.Hasql.Test.Run
      Polysemy.Hasql.Test.SingletonTest
      Polysemy.Hasql.Test.SumFieldTest
      Polysemy.Hasql.Test.SumTableTest
      Polysemy.Hasql.Test.UpsertTest
      Paths_polysemy_hasql
  hs-source-dirs:
      integration
  default-extensions: AllowAmbiguousTypes ApplicativeDo BangPatterns BinaryLiterals BlockArguments ConstraintKinds DataKinds DefaultSignatures DeriveAnyClass DeriveDataTypeable DeriveFoldable DeriveFunctor DeriveGeneric DeriveTraversable DerivingStrategies DisambiguateRecordFields DoAndIfThenElse DuplicateRecordFields EmptyDataDecls ExistentialQuantification FlexibleContexts FlexibleInstances FunctionalDependencies GADTs GeneralizedNewtypeDeriving InstanceSigs KindSignatures LambdaCase LiberalTypeSynonyms MultiParamTypeClasses MultiWayIf NamedFieldPuns OverloadedStrings OverloadedLists PackageImports PartialTypeSignatures PatternGuards PatternSynonyms PolyKinds QuantifiedConstraints QuasiQuotes RankNTypes RecordWildCards RecursiveDo ScopedTypeVariables StandaloneDeriving TemplateHaskell TupleSections TypeApplications TypeFamilies TypeFamilyDependencies TypeOperators TypeSynonymInstances UndecidableInstances UnicodeSyntax ViewPatterns
  ghc-options: -Wall -Wredundant-constraints -Wsimplifiable-class-constraints -fplugin=Polysemy.Plugin -O2 -flate-specialise -fspecialise-aggressively -threaded -rtsopts -with-rtsopts=-N
  build-depends:
      aeson
    , async
    , base
    , chronos
    , containers
    , contravariant
    , fcf-containers
    , first-class-families
    , generics-sop
    , ghc-prim
    , hasql >=1.4.3 && <1.5
    , hedgehog
    , lens
    , path
    , polysemy
    , polysemy-db
    , polysemy-db-data
    , polysemy-hasql
    , polysemy-plugin
    , polysemy-resume
    , polysemy-test
    , polysemy-time
    , postgresql-libpq
    , scientific
    , stm-chans
    , symbols
    , tasty
    , tasty-hedgehog
    , template-haskell
    , text
    , th-test-utils
    , time
    , type-errors
    , type-errors-pretty
    , uuid
    , vector
  mixins:
      base hiding (Prelude)
    , polysemy-db hiding (Polysemy.Db.Prelude)
    , polysemy-db (Polysemy.Db.Prelude as Prelude)
  default-language: Haskell2010

test-suite polysemy-hasql-unit
  type: exitcode-stdio-1.0
  main-is: Main.hs
  other-modules:
      Polysemy.Hasql.Test.EnumTest
      Polysemy.Hasql.Test.HasGeneric
      Polysemy.Hasql.Test.ParamTest
      Polysemy.Hasql.Test.RepTest
      Polysemy.Hasql.Test.StatementTest
      Polysemy.Hasql.Test.TableTest
      Paths_polysemy_hasql
  hs-source-dirs:
      test
  default-extensions: AllowAmbiguousTypes ApplicativeDo BangPatterns BinaryLiterals BlockArguments ConstraintKinds DataKinds DefaultSignatures DeriveAnyClass DeriveDataTypeable DeriveFoldable DeriveFunctor DeriveGeneric DeriveTraversable DerivingStrategies DisambiguateRecordFields DoAndIfThenElse DuplicateRecordFields EmptyDataDecls ExistentialQuantification FlexibleContexts FlexibleInstances FunctionalDependencies GADTs GeneralizedNewtypeDeriving InstanceSigs KindSignatures LambdaCase LiberalTypeSynonyms MultiParamTypeClasses MultiWayIf NamedFieldPuns OverloadedStrings OverloadedLists PackageImports PartialTypeSignatures PatternGuards PatternSynonyms PolyKinds QuantifiedConstraints QuasiQuotes RankNTypes RecordWildCards RecursiveDo ScopedTypeVariables StandaloneDeriving TemplateHaskell TupleSections TypeApplications TypeFamilies TypeFamilyDependencies TypeOperators TypeSynonymInstances UndecidableInstances UnicodeSyntax ViewPatterns
  ghc-options: -Wall -Wredundant-constraints -Wsimplifiable-class-constraints -fplugin=Polysemy.Plugin -O2 -flate-specialise -fspecialise-aggressively -threaded -rtsopts -with-rtsopts=-N
  build-depends:
      aeson
    , async
    , base
    , chronos
    , containers
    , contravariant
    , fcf-containers
    , first-class-families
    , generics-sop
    , ghc-prim
    , hasql >=1.4.3 && <1.5
    , hedgehog
    , lens
    , path
    , polysemy
    , polysemy-db
    , polysemy-db-data
    , polysemy-hasql
    , polysemy-plugin
    , polysemy-resume
    , polysemy-test
    , polysemy-time
    , postgresql-libpq
    , scientific
    , stm-chans
    , symbols
    , tasty
    , tasty-hedgehog
    , template-haskell
    , text
    , th-test-utils
    , time
    , type-errors
    , type-errors-pretty
    , uuid
    , vector
  mixins:
      base hiding (Prelude)
    , polysemy-db hiding (Polysemy.Db.Prelude)
    , polysemy-db (Polysemy.Db.Prelude as Prelude)
  default-language: Haskell2010
